@page "/DetailsClientes"
@page "/DetailsClientes/clienteId={clienteId:int}"
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject ClientesService clientesService
@inject NavigationManager NavigationManager;

<PageTitle>Detalle de Cliente</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header">
			<h3><strong>Detalle de Cliente</strong></h3>
		</div>
		@*Body*@
		<div class="card-body">
			@*Datos*@
			<div class="mb-1">
				<p class="mb-0">ClienteId: @cliente.ClienteId</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">Nombre: @cliente.Nombre</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">Tel&eacute;fono: @cliente.Telefono</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">Celular: @cliente.Celular</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">RNC: @cliente.RNC</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">Email: @cliente.Email</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">Direcci&oacute;n: @cliente.Direccion</p>
			</div>
		</div>
		@*Footer*@
		<div class="card-footer d-flex justify-content-center">
			<button type="button" class="btn btn-outline-primary" @onclick="VolverAInicio"><i class="bi bi-box-arrow-left"/> Volver</button>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public int clienteId { get; set; }
	public Clientes cliente { get; set; } = new Clientes();
	public List<Clientes> clientesList = new List<Clientes>();

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		if (clienteId > 0)
			cliente = await clientesService.BuscarId(clienteId);
	}

	void VolverAInicio()
	{
		NavigationManager.NavigateTo("/Clientes");
	}
}
