@page "/detailstickets"
@attribute [StreamRendering]
@inject TicketsServices ticketsServices

<PageTitle>Detalles de Tickets</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header">
			<h3><strong>Detalles de Tickets</strong></h3>
			<a href="/createtickets"><em>Crear</em></a>
		</div>
		@*Body*@
		<div class="card-body">
			<div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4"></div>
			@if (ticketsList.Count == 0)
			{
				<p><em>Cargando...</em></p>
			}
			else
			{
				<table class="table">
					<thead>
						<tr>
							<th>TikectId</th>
							<th>Fecha</th>
							<th>Solicitado Por</th>
							<th>ClienteId</th>
							<th>SistemaId</th>
							<th>Descripci&oacute;n</th>
							<th>PrioridadId</th>
							<th>Asunto</th>
							<th>Editar</th>
							<th>Eliminar</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var tickets in ticketsList)
						{
							<tr>
								<td>@tickets.TicketId</td>
								<td>@tickets.Fecha</td>
								<td>@tickets.SolicitadoPor</td>
								<td>@tickets.ClienteId</td>
								<td>@tickets.SistemaId</td>
								<td>@tickets.PriorityId</td>
								<td>@tickets.Descripcion</td>
								<td>@tickets.Asunto</td>
								<td><a href="/edittickets/ticketId=@tickets.TicketId"><em><i class="bi bi-pencil-square" /></em></a></td>
								<td><a href="/deletetickets/ticketId=@tickets.TicketId"><em><i class="bi bi-trash3-fill" /></em></a></td>
							</tr>
						}
					</tbody>
				</table>
			}
		</div>
		@*Footer*@
		<div class="card-footer">
			<p><strong>Total de Tickets:</strong> @ticketsList.Count</p>
		</div>
	</div>
</div>

@code {
	public Tickets ticket { get; set; } = new Tickets();
	public List<Tickets> ticketsList = new List<Tickets>();

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		Expression<Func<Tickets, bool>> criterio = cliente => cliente.ClienteId > 0;
		ticketsList = await ticketsServices.Listar(criterio);
	}
}
