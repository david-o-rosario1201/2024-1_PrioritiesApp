@page "/EditTickets"
@page "/EditTickets/ticketId={ticketId:int}"
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject TicketsService ticketsService
@inject ClientesService clientesService
@inject SistemasService sistemasService
@inject PrioritiesService prioridadesService
@inject NavigationManager NavigationManager

<PageTitle>Editar Ticket</PageTitle>
<EditForm Model="ticket" OnValidSubmit="Modificar">
	<DataAnnotationsValidator />
	<div class="container">
		<div class="card shadow-lg">
			@*Header*@
			<div class="card-header">
				<h3><strong>Editar Ticket</strong></h3>
			</div>
			@*Cuerpo*@
			<div class="card-body">
				<div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4"></div>
				<div class="mb-3">
					<div class="col-4">
						@*Ticket ID*@
						<label class="form-label" for="ticketId"><strong>TicketId:</strong></label>
						<InputNumber id="ticketId" class="form-control" @bind-Value="ticket.TicketId" readonly></InputNumber>
					</div>
				</div>
				<div class="mb-3">
					<div class="col-4">
						@*Fecha*@
						<label class="form-label" for="fecha"><strong>Fecha:</strong></label>
						<InputDate id="fecha" class="form-control" @bind-Value="ticket.Fecha"></InputDate>
						<ValidationMessage For="@(() => ticket.Fecha)"></ValidationMessage>
					</div>
				</div>
				<div class="mb-3">
					<div class="col-4">
						@*Asunto*@
						<label class="form-label" for="asunto"><strong>Asunto:</strong></label>
						<InputText id="asunto" class="form-control" @bind-Value="ticket.Asunto" placeholder="Ingrese un asunto"></InputText>
						<ValidationMessage For="@(() => ticket.Asunto)"></ValidationMessage>
					</div>
				</div>
				<div class="mb-3">
					<div class="col-4">
						@*Solicitado Por*@
						<label class="form-label" for="solicitado"><strong>SolicitadoPor:</strong></label>
						<InputText id="solicitado" class="form-control" @bind-Value="ticket.SolicitadoPor" placeholder="Ingrese el nombre de quien solicita el ticket"></InputText>
						<ValidationMessage For="@(() => ticket.SolicitadoPor)"></ValidationMessage>
					</div>
				</div>
				<div class="mb-3">
					<div class="col-4">
						@*Cliente ID*@
						<label class="form-label" for="clienteid"><strong>ClienteId:</strong></label>
						<InputSelect id="clienteid" class="form-select" @bind-Value="ticket.ClienteId">
							<option>Elija una opci&oacute;n</option>
							@foreach (var clientes in clientesList)
							{
								<option value="@clientes.ClienteId">@clientes.Nombre</option>
							}
						</InputSelect>
						<ValidationMessage For="@(() => ticket.ClienteId)"></ValidationMessage>
					</div>
				</div>
				<div class="mb-3">
					<div class="col-4">
						@*Sistema ID*@
						<label class="form-label" for="sistemaid"><strong>SistemaId:</strong></label>
						<InputSelect id="sistemaid" class="form-select" @bind-Value="ticket.SistemaId">
							<option>Elija una opci&oacute;n</option>
							@foreach (var sistemas in sistemasList)
							{
								<option value="@sistemas.SistemaId">@sistemas.Nombre</option>
							}
						</InputSelect>
						<ValidationMessage For="@(() => ticket.SistemaId)"></ValidationMessage>
					</div>
				</div>
				<div class="mb-3">
					<div class="col-4">
						@*Prioridad ID*@
						<label class="form-label" for="prioridadid"><strong>PrioridadId:</strong></label>
						<InputSelect id="prioridadid" class="form-select" @bind-Value="ticket.PriorityId">
							<option>Elija una opci&oacute;n</option>
							@foreach (var prioridades in prioridadesList)
							{
								<option value="@prioridades.PriorityId">@prioridades.Description</option>
							}
						</InputSelect>
						<ValidationMessage For="@(() => ticket.PriorityId)"></ValidationMessage>
					</div>
				</div>
				<div class="mb-3">
					<div class="col-4">
						@*Descripción*@
						<label class="form-label" for="descripcion"><strong>Descripci&oacute;n:</strong></label>
						<InputTextArea id="descripcion" class="form-control" @bind-Value="ticket.Descripcion" placeholder="Ingrese una descripción"></InputTextArea>
						<ValidationMessage For="@(() => ticket.Descripcion)"></ValidationMessage>
					</div>
				</div>
				<div class="mb-3"></div>
			</div>
			@*Boton*@
			<div class="card-footer d-flex justify-content-center">
				<div class="px-2">
					<button type="button" class="btn btn-outline-primary" @onclick="IrAPaginaDestino"><i class="bi bi-box-arrow-left"/> Volver</button>
				</div>
				<button type="submit" class="btn btn-outline-success">
					<i class="bi bi-floppy-fill" /> Modificar
				</button>
			</div>
		</div>
	</div>
	@*Mensaje*@
	@mensaje
</EditForm>

@code {
	[Parameter]
	public int ticketId { get; set; }
	public Tickets ticket { get; set; } = new Tickets();
	public string mensaje { get; set; } = string.Empty;
	public List<Clientes> clientesList = new List<Clientes>();
	public List<Sistemas> sistemasList = new List<Sistemas>();
	public List<Priorities> prioridadesList = new List<Priorities>();

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);

		clientesList = await clientesService.Listar(c => c.ClienteId > 0);
		sistemasList = await sistemasService.Listar(s => s.SistemaId > 0);
		prioridadesList = await prioridadesService.Listar(p => p.PriorityId > 0);

		if (ticketId > 0)
			ticket = await ticketsService.BuscarId(ticketId);
	}

	public async Task Modificar()
	{
		var crear = await ticketsService.Crear(ticket);
		if (crear)
		{
			mensaje = "El ticket se ha creado con exito";
			await Task.Delay(2000);
			IrAPaginaDestino();
		}
		else
			mensaje = "No se pudo crear el ticket correctamente";
	}

	void IrAPaginaDestino()
	{
		NavigationManager.NavigateTo("/Tickets");
	}
}
