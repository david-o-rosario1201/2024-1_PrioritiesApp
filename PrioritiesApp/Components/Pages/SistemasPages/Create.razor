@page "/CreateSistemas"
@rendermode InteractiveServer
@inject SistemasService sistemasServices;
@inject NavigationManager NavigationManager;

<PageTitle>Crear Nuevo Sistema</PageTitle>
<EditForm Model="sistema" OnValidSubmit="Crear">
	<DataAnnotationsValidator />
	<div class="container">
		<did class="card shadow-lg">
			@*Header*@
			<div class="card-header">
				<h3><strong>Crear Nuevo Sistema</strong></h3>
			</div>
			@*Body*@
			<div class="card-body">
				<div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4"></div>
				@*Id*@
				<div class="mb-3">
					<div class="col-4">
						<label class="form-label" for="sistemaid"><strong>Sistema_Id:</strong></label>
						<InputNumber id="sistemaid" class="form-control" @bind-Value="sistema.SistemaId"></InputNumber>
					</div>
				</div>
				@*Nombre*@
				<div class="mb-3">
					<div class="col-4">
						<label class="form-label" for="nombre"><strong>Nombre:</strong></label>
						<InputText id="nombre" class="form-control" @bind-Value="sistema.Nombre" placeholder="Escriba un nombre para el sistema"></InputText>
						<ValidationMessage For="@(() => sistema.Nombre)"></ValidationMessage>
					</div>
				</div>
			</div>
			@*Boton*@
			<div class="card-footer d-flex justify-content-center">
				<div class="px-2">
					<button type="button" class="btn btn-outline-primary" @onclick="VolverAInicio">Volver</button>
				</div>
				<button type="submit" class="btn btn-outline-success">
					<i class="bi bi-floppy-fill" /> Crear
				</button>
			</div>
		</did>
	</div>
	@mensaje
</EditForm>

@code {
	public Sistemas sistema { get; set; } = new Sistemas();
	public string mensaje { get; set; } = string.Empty;

	public async Task Crear()
	{
		if (await Validar())
			mensaje = "Error, ya existe un sistema con este nombre";
		else
		{
			var crear = await sistemasServices.Crear(sistema);
			if (crear)
			{
				mensaje = "Los datos se han crear con exito";
				await Task.Delay(2000);
				LimpiarPantalla();
			}
			else
				mensaje = "Error, los datos no se han podido crear correctamente";
		}
	}

	public async Task<bool> Validar()
	{
		var validar = await sistemasServices.BuscarSistema(sistema.Nombre);
		if (validar != null)
			return true;

		return false;
	}

	public void LimpiarPantalla()
	{
		sistema = new Sistemas();
		mensaje = string.Empty;
	}

	void VolverAInicio()
	{
		NavigationManager.NavigateTo("/Sistemas");
	}
}
