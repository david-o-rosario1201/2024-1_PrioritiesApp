@page "/CreatePrioridades"
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject PrioritiesService prioritiesServices;
@inject NavigationManager NavigationManager;

<PageTitle>Crear Nueva Prioridad</PageTitle>
<EditForm Model="prioridad" OnValidSubmit="Crear">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3><strong>Crear Nueva Prioridad</strong></h3>
            </div>
            <div class="card-body">
                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4"></div>
                @*ID*@
                <div class="mb-3">
                    <div class="col-4">
                        <label class="form-label" for="prioridadId"><strong>Proridad_Id:</strong></label>
                        <InputNumber id="prioridadId" class="form-control" @bind-Value="prioridad.PriorityId"></InputNumber>
                    </div>
                </div>
                @*Descripcion*@
                <div class="mb-3">
                    <div class="col-4">
                        <label class="form-label" for="entradaDescripcion"><strong>Descripci&oacute;n:</strong></label>
                        <InputText id="entradaDescripcion" class="form-control" placeholder="Escribe una descripci&oacute;n" @bind-Value="prioridad.Description"></InputText>
                        <ValidationMessage For="@(() => prioridad.Description)" />
                    </div>
                </div>
                @*Dias compromiso*@
                <div class="mb-3">
                    <div class="col-4">
                        <label class="form-label" for="entradaDiasCompromiso"><strong>Dias_compromiso:</strong></label>
                        <InputNumber id="entradaDiasCompromiso" class="form-control" @bind-Value="prioridad.DaysCommitment"></InputNumber>
                        <ValidationMessage For="@(() => prioridad.DaysCommitment)" />
                    </div>
                </div>
                <div class="mb-3"></div>
            </div>
            @*Boton*@
            <div class="card-footer d-flex justify-content-center">
                <div class="px-2">
                    <button type="button" class="btn btn-outline-primary" @onclick="VolverAInicio">Volver</button>
                </div>
                <button type="submit" class="btn btn-outline-success">
                    <i class="bi bi-floppy-fill" /> Crear
                </button>
            </div>
        </div>
    </div>
    @*Mensaje*@
    @mensaje
</EditForm>

@code {
    public Priorities prioridad { get; set; } = new Priorities();
    public string mensaje { get; set; } = string.Empty;

    public async Task Crear()
    {
        if (await Validar())
            mensaje = "Error, ya existe una prioridad con esta descripción";
        else
        {
            var crear = await prioritiesServices.Crear(prioridad);
            if (crear)
            {
                mensaje = "Los datos se han crear con exito";
                await Task.Delay(2000);
                LimpiarPantalla();
            }
            else
                mensaje = "Error, los datos no se han podido crear correctamente";
        }
    }

    public async Task<bool> Validar()
    {
        var validar = await prioritiesServices.BuscarDescripcion(prioridad.Description);
        if (validar != null)
            return true;

        return false;
    }

    public void LimpiarPantalla()
    {   
        prioridad = new Priorities();
        mensaje = string.Empty;
    }

    void VolverAInicio()
    {
        NavigationManager.NavigateTo("/Prioridades");
    }
}
