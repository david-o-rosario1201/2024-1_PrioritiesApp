@page "/priorities"
@inject PrioritiesBLL priorityBLL;
@rendermode InteractiveServer

<EditForm Model="Priority" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3><strong>REGISTRO DE PRIORIDADES</strong></h3>
            </div>
            <div class="card-body">
                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4"></div>
                @*ID*@
                <label><strong>ID:</strong></label><br />
                <div class="id">
                    <InputNumber class="form-control" @bind-Value="Priority.PriorityId"></InputNumber>
                    
                    <button @onclick="Buscar" class="btn btn-primary" type="button"> <i class="bi bi-search" /> Buscar</button>
                </div><br /><br />
                @*Descripcion*@
                <label><strong>Descripci&oacute;n:</strong></label> <br />
                <div class="descripcion">
                    <InputText class="form-control" placeholder="Escribe una descripci&oacute;n" @bind-Value="Priority.Description"></InputText><br />
                    <ValidationMessage For="@(() => Priority.Description)" />
                </div>  
                @*Dias compromiso*@
                <label><strong>Dias compromiso:</strong></label>
                <div class="compromiso">
                    <InputNumber class="form-control" @bind-Value="Priority.DaysCommitment"></InputNumber>
                    <ValidationMessage For="@(() => Priority.DaysCommitment)" />
                </div>
                <div class="mb-3"></div>
            </div>
            @*Botones*@
            <div class="card-footer d-flex justify-content-center">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-primary" @onclick="Nuevo">
                        <i class="bi bi-file-earmark-plus-fill" /> Nuevo
                    </button>
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-floppy-fill" /> Guardar
                    </button>
                    <button type="button" class="btn btn-danger" @onclick="Eliminar">
                        <i class="bi bi-trash-fill" /> Eliminar
                    </button>
                </div>
            </div>
        </div>
    </div>
    @*Mensaje*@
    <div class="mensaje">
        <span class="error"><p>@MensajeError</p></span>
        <span class="exito"><p>@MensajeExito</p></span>
    </div>
</EditForm>

@code {
    [Parameter]
    public int? PriorityId { get; set; }
    public Priorities Priority { get; set; } = new Priorities();
    public string MensajeError { get; set; } = string.Empty;
    public string MensajeExito { get; set; } = string.Empty;

    protected override void OnInitialized()
    {
        if (PriorityId.HasValue)
        {
            Priority.PriorityId = PriorityId.Value;
            Buscar();
        }
    }

    public void Nuevo()
    {
        Priority = new Priorities();
        MensajeError = "";
        MensajeExito = "";
    }

    public async Task Guardar()
    {
        if (Validar())
            MensajeError = "Error, esta descripcion ya existe";

        else if (Priority.DaysCommitment <= 0)
            MensajeError = "El dia debe ser mayor que cero (0)";

        else
        {
            var guardo = priorityBLL.Guardar(Priority);
            if (guardo)
            {
                MensajeError = "";
                MensajeExito = "Se guardo correctamente";  
            }
            else
                MensajeError = "No se pudo guardar el ticket";
        }
    }

    public bool Validar()
    {
        var valor = priorityBLL.Buscar(Priority.Description);

        if (valor != null)
            return true;

        else
            return false;
    }

    public void Buscar()
    {
        var buscar =  priorityBLL.Buscar(Priority.PriorityId);

        if (buscar != null)
        {
            Priority = buscar;
            MensajeError = "";
            MensajeExito = "";
        }

        else
            MensajeError = $"No se encontraron dastos con el id: {Priority.PriorityId}";
    }

    public void Eliminar()
    {
        var eliminar = priorityBLL.Delete(Priority.PriorityId);
        MensajeError = "";
        MensajeExito = "El dato se ha elimiando con exito!";
    }
}